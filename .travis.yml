language: java
jdk:
  - openjdk8

# master 브랜치가 푸시될때 travis 작동
branches:
  only:
    - master

#before_install:
#  - chmod +x gradlew

# Travis CI 서버의 Home
# 그레이들을 통해 한번 받은 의존성은 캐시하여, 같은 의존성은 다음 배포때부터 받지 않음.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸시되었을 때 수행하는 명령어.
script: "./gradlew clean build"

before_deploy: # 위에서 빌드 된 jar + 기타 설정파일을 모아 압축(zip). CodeDeploy 는 jar 파일을 인식하지 못하기 때문에 미리 작업해줌.
  - mkdir -p before-deploy # zip 에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/ # 배포 스크립트들
  - cp appspec.yml before-deploy/ # code deploy 관련 설정인 appspec.yml
  - cp build/libs/*.jar before-deploy/ # 빌드파일(.jar)
  - cd before-deploy && zip -r before-deploy * # before-deploy 로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/freelec-springboot-webservice.zip # deploy 로 zip 파일 이동m

deploy:
  - provider: s3 # s3로 파일 업로드
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings 에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings 에 설정된 값
    bucket: freelec-springboot-build-sw # s3 버킷
    region: ap-northeast-2 # s3 리전
    skip_cleanup: true
    acl: private # zip 파일 접근을 private
    local_dir: deploy # before_deploy 에서 생성한 디렉토리. 해당 위치의 파일(현재 freelec-springboot-webservice.zip이 들어있다.) 들만 s3로 전송
    wait-until-deployed: true

  - provider: codedeploy # code deploy 로 배포
    access_key_id: $AWS_ACCESS_KEY # Travis repo setting에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: freelec-springboot-build-sw
    key: freelec-springboot-webservice.zip # 빌드 파일을 압축해서 전달. 위에 before_deploy 시에 만든 파일명과 같아야함.
    bundle_type: zip # 압축 확장자
    application: freelec-springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: freelec-springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - susu1990@naver.com