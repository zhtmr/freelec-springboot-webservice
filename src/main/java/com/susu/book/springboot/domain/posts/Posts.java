package com.susu.book.springboot.domain.posts;

import lombok.Getter;
import lombok.NoArgsConstructor;

import javax.persistence.*;

@Getter
@NoArgsConstructor // 기본생성자
@Entity // 테이블 posts와 매칭
public class Posts {
    /*
    *   Hibernate: create table posts (id bigint generated by default as identity, author varchar(255), content TEXT not null, title varchar(500) not null, primary key (id))
    * */
    @Id // 해당 테이블의 PK
    @GeneratedValue(strategy = GenerationType.IDENTITY) // PK생성 규칙 : auto increment
    private Long id;

    @Column(length = 500, nullable = false)
    private String title;

    @Column(columnDefinition = "TEXT", nullable = false)
    private String content;

    private String author;

    // 디자인 패턴 : 빌더 패턴 (setter 메소드나, 매개변수 가진 생성자 대신 사용 : 실행시 변수전달 순서에서 자유로움, 메소드로 전달)
    public Posts(String title, String content, String author){
        this.title=title;
        this.content=content;
        this.author=author;
    }

    public static PostsBuilder builder() {
        return new PostsBuilder();
    }


    public static class PostsBuilder {
        private String title;
        private String content;
        private String author;

        PostsBuilder() {
        }

        public PostsBuilder title(String title) {
            this.title = title;
            return this;
        }

        public PostsBuilder content(String content) {
            this.content = content;
            return this;
        }

        public PostsBuilder author(String author) {
            this.author = author;
            return this;
        }

        public Posts build() {
            return new Posts(title, content, author);
        }

        public String toString() {
            return "Posts.PostsBuilder(title=" + this.title + ", content=" + this.content + ", author=" + this.author + ")";
        }
    }
}
